2016-08-16	Fixed one relocation handling bug.  More bugs to go...

		bin/innocent-pear-dogecoin.cc :
		- now uses in-place relocation addends whenever possible,
		  when creating new pc-relative relocations

		GNUmakefile :
		- `make clean' now also removes *.pear.t.?????? temporaries

		share/innocent-pear/doge-03.cc :
		- tweaked code formatting

		include/innocent-pear/rofl.h :
		- hopefully fixed register assignment for 3-argument
		  syscalls in ARM Thumb mode for g++ < 5

2016-08-15	Scrambling of (some) data sections, finally.  (2)

		GNUmakefile :
		- removed share/innocent-pear/doge-05.cc as a dependency
		- now dumps a larger portion of the compiled binaries for
		  test-doge* test cases
		- now no longer passes `-v' to compiler front-end when
		  building test/test-doge-abs-reloc

		bin/innocent-pear-c++.cc :
		- no longer compiles doge-05.cc when in `-Xinnocent-pear
		  -doge' mode
		- string constants are no longer scrambled

		include/innocent-pear/rofl.h :
		- hopefully fixed register assignment for 3-argument
		  syscalls in ARM Thumb mode for g++ >= 5

		share/innocent-pear/doge-01.cc :
		- slightly renamed the constructor routine

		share/innocent-pear/doge-03.cc :
		- merged doge-04.cc into this file
		- separated out the calls to rofl<...>::memset(...) from
		  the routines that do other things
		- rofl<...>::memset(...) should now be called more often too

		share/innocent-pear/doge-04.cc :
		- renamed from share/innocent-pear/doge-05.cc; the original
		  doge-04.cc was merged into doge-03.cc

		share/innocent-pear/doge-98.cc :
		- separated out the call to rofl<...>::memset(...) from
		  everything else

		share/innocent-pear/sleepier.cc :
		- sleepier_t::sleepiest() now no longer bails out if the
		  file to be removed no longer exists

2016-08-14	Scrambling of (some) data sections, finally.

		share/innocent-pear/doge.ld :
		- initial version

		bin/innocent-pear-c++.cc :
		- now scrambles .rodata and .data sections by way of bin/
		  innocent-pear-doge
		- now uses share/innocent-pear/doge.ld

		bin/innocent-pear-dogecoin.cc :
		- now emits section names of the form .innocent_pear.
		  dogecoin.* rather than .rodata.innocent_pear.dogecoin.*
		- now no longer sorts new sections by name, this being done
		  in share/innocent-pear/doge.ld

		share/innocent-pear/calm.cc :
		- now uses bin/innocent-pear-dogecoin if assembler pass is
		  given `--Xinnocent-pear=doge'

		share/innocent-pear/doge-01.cc ,
		share/innocent-pear/doge-03.cc ,
		share/innocent-pear/doge-05.cc ,
		share/innocent-pear/doge-98.cc ,
		share/innocent-pear/doge-99.cc :
		- updated to handle scrambled .rodata and .data sections, as
		  well as absolute relocations

		GNUmakefile :
		- added share/innocent-pear/doge.ld as a dependency

		README.md :
		- well, there goes one bug...

2016-08-12	"Biochemistry is the study of carbon compounds that crawl."

		lolwutconf/ :
		- bumped to 4de7cac154

		configure :
		- modified to use conf_bfd_chk_exists()

		.gitignore :
		- added innocent-pear-dogecoin

2016-08-09	"Going the speed of light is bad for your age."

		bin/innocent-pear-dogecoin.cc :
		- initial version; for later use

		GNUmakefile :
		- changed to compile and install bin/innocent-pear-dogecoin
		  properly

2016-08-07	"The chicken was involved, the pig was committed."

		GNUmakefile :
		- `make' now no longer runs tests like `make check' does
		- fixed duplicate addition of `-Xinnocent-pear -doge -v' to
		  compiler command line for test-orly-wut and test-doge*
		  test cases -- including for old GNU make
		- added share/innocent-pear/lolrus.o as a dependency of
		  bin/innocent-pear-doge

		bin/innocent-pear-doge.cc :
		- factored out string-to-integer parsing to share/innocent-
		  pear/lolrus.cc

		share/innocent-pear/lolrus.cc :
		- initial version

		include/innocent-pear/host/lolcat.h :
		- bug fix: now includes <iostream>
		- added prototype for lolrus(...)

2016-08-06	RAII for managing temporaries.  Refactoring.  Bug fixes.

		GNUmakefile :
		- now uses the new file names for the share/innocent-pear/
		  doge-*.cc modules
		- now dumps (part of) compiled binaries for test-doge* test
		  cases, for debugging

		include/innocent-pear/bbq.h :
		- innocent_pear::impl::pow<...>() is now Always Inlineâ„¢

		test/infra/travis-install-deps.sh :
		- now also installs xz-utils, to allow use of xz

		share/innocent-pear/sleepier.cc ,
		include/innocent-pear/host/lolcat.h :
		- now defines sleepier_t class instead of sleepier(...) and
		  sleepiest(...) routines

		bin/innocent-pear-c++.cc :
		- now uses the new file names for the share/innocent-pear/
		  doge-*.cc modules
		- now uses sleepier_t class

		bin/innocent-pear-doge.cc ,
		share/innocent-pear/calm.cc :
		- now uses sleepier_t class

		share/innocent-pear/doge-01.cc :
		- renamed from share/innocent-pear/doge-1.cc

		share/innocent-pear/doge-02.cc :
		- renamed from share/innocent-pear/doge-2.cc

		share/innocent-pear/doge-03.cc ,
		share/innocent-pear/doge-04.cc :
		- renamed and split from share/innocent-pear/doge-3.cc

		share/innocent-pear/doge-05.cc :
		- renamed from share/innocent-pear/doge-4.cc

		share/innocent-pear/doge-98.cc :
		- renamed from share/innocent-pear/doge-8.cc

		share/innocent-pear/doge-99.cc :
		- renamed from share/innocent-pear/doge-9.cc

		include/innocent-pear/omg.h :
		- fixed minor bug

2016-08-05	Prevent files from magically materializing due to bash
		completion of makefile targets.  And, other things.

		GNUmakefile :
		- rule for config.cache now gives an error message instead
		  of running ./configure
		- added test-doge-abs-reloc test case
		- added rules for building one bin/innocent-pear-dogecoin
		  (for later use...)

		test/test-doge-abs-reloc.cc ,
		test/test-doge-abs-reloc.good :
		- initial version

		bin/innocent-pear-doge.cc :
		- reformatted wow(...) messages to take up less screen space

		.gitignore :
		- added test-doge-abs-reloc

2016-08-04	There is always another tweak.

		test/test-doge.cc :
		- removed unneeded #include's

2016-08-02	Now shreds (some) intermediate files during build.

		share/innocent-pear/keyboard.cc :
		- moved sleepier(.) out to sleepier.cc

		share/innocent-pear/sleepier.cc :
		- split from keyboard.cc
		- added sleepiest(.)

		share/innocent-pear/calm.cc :
		- now uses sleepiest(.)
		- removed debugging code for assembler pass

		bin/innocent-pear-c++.cc :
		- now uses sleepiest(.)

		bin/innocent-pear-doge.cc :
		- now uses sleepier(.) and sleepiest(.)

		include/innocent-pear/host/lolcat.h :
		- added sleepiest(.) prototype

		configure :
		- now looks for fdatasync(.) host-side

		GNUmakefile :
		- added share/innocent-pear/sleepier.o as a dependency for
		  host-side programs
		- now defines and uses $(RM) for removing files and
		  directories
		- now says in $(config.h.host) whether fdatasync(.) exists
		  host-side

2016-08-01	Assembler back-end wrapper tweak.

		share/innocent-pear/calm.cc :
		- now handles long options for `as' which require separate
		  arguments

2016-07-31	"RAM wasn't built in a day."

		.travis.yml :
		- factored out build command into a separate script

		test/infra/travis-build-and-check.sh :
		- initial version; build command factored out from .travis.yml
		- added test of `./configure --help'

		GNUmakefile :
		- `make uninstall' should now remove host-side utilities
		- split `uninstall' rule into two sub-rules
		- marked `default', `check', etc. targets as `.PHONY'

		bin/innocent-pear-c++.cc :
		- now passes `--Xinnocent-pear=doge' to assembler pass, if
		  `-Xinnocent-pear -doge' is seen

		share/innocent-pear/calm.cc :
		- wrapper for assembler pass now accepts `--Xinnocent-pear=
		  doge', though this option currently does nothing

		lolwutconf/ :
		- bumped to da490e2042

2016-07-30	Tweaks.  (4)

		bin/innocent-pear-c++.cc :
		- now always passes `-fno-integrated-as' to target C++
		  compiler, if supported
		- now ignores any `-fintegrated-as' on input command line

		GNUmakefile :
		- now says in $(config.h.host) whether target compiler has
		  `-fno-integrated-as'
		- no longer specially passes `-fno-integrated-as' to make
		  rule when building .s files for target

2016-07-29	Improved relocation handling.

		bin/innocent-pear-doge.cc :
		- no longer errors out if input has no dynamic relocations

2016-07-28	Tweaks.  (3)

		configure ,
		GNUmakefile ,
		include/innocent-pear/dawg.h ,
		include/innocent-pear/kthxbai.h :
		- target-side C++ variadic template support is now also
		  mandatory

		lolwutconf/ :
		- bumped to 01f15b32fc

2016-07-26	Tweaks.  (2)

		configure ,
		GNUmakefile :
		- host-side C++ variadic template support is now mandatory;
		  so bin/innocent-pear-doge can always be built

		lolwutconf/ :
		- bumped to 3e5b959d52

2016-07-24	"No output has been received in the last 10m0s, this
		potentially indicates a stalled build or something wrong
		with the build itself."

		share/innocent-pear/doge-1.cc :
		- now calls rofl<...>::tcflow(, TCOOFF) on a (compile-time)
		  random fd, not always stdout

		share/innocent-pear/doge-3.cc :
		- bug fix: now calls rofl<...>::tcflow(, TCOON) on stdin and
		  stderr as well

		include/innocent-pear/rofl.h :
		- rofl<...>::ioctl(fd, ...) now also scrambles fd if known to
		  be constant
		- rofl<...>::tcflow(fd, .) no longer scrambles fd if handing
		  over to ioctl(...) :-)

2016-07-23	Beginning of clang++ support.

		configure :
		- now tests if host and target compilers support
		  `-fno-integrated-as', and if target supports `-wrapper'
		- libbfd is now obligatory

		bin/innocent-pear-c++.cc :
		- .ccc -> .cc
		- now supports sending compiler passes to calm.cc via using
		  `-###' rather than `-wrapper'
		- removed `-specs ...'
		- some bug fixes

		bin/innocent-pear-doge.cc :
		- .ccc -> .cc
		- now #define's innocent_pear_HOST_SIDE

		share/innocent-pear/doge-1.cc ,
		share/innocent-pear/doge-3.cc ,
		share/innocent-pear/doge-8.cc ,
		share/innocent-pear/epic.cc ,
		test/*.cc :
		- .ccc -> .cc

		GNUmakefile :
		- .ccc -> .cc
		- now writes results of `-wrapper' test to
		- now adds `-fno-integrated-as' compiler flag when building
		  .s files (host or target), if this flag is supported
		- removed checks for libbfd

		.travis.yml :
		- now also tests with clang++ as host-side compiler, and as
		  target-side compiler for default processor type (x86-64)
		  and x86-32

		share/innocent-pear/keyboard.cc :
		- added two more parameters to keyboard(...) and
		  keyboardest(...)
		- removed keyboard(, )
		- made keyboarder(...) local to module
		- now #define's innocent_pear_HOST_SIDE

		share/innocent-pear/nomnom.cc :
		- now #define's innocent_pear_HOST_SIDE
		- now includes derp.h via bbq.h, as it should

		share/innocent-pear/calm.cc :
		- now handles clang-style compiler passes
		- updated keyboard(...) and keyboardest(...) calls
		- now #define's innocent_pear_HOST_SIDE

		share/innocent-pear/calm.spec :
		- removed

		include/innocent-pear/bbq.h :
		- tweaked calculations of multiplicative inverses

		include/innocent-pear/kthxbai.h :
		- tweaked calculations of multiplicative inverses
		- `arplw' -> `arpl', as clang++ does not understand `arplw'

		include/innocent-pear/lolwut.h :
		- fixed or disabled __asm constructs which do not work well
		  under clang++

		include/innocent-pear/host/lolcat.h :
		- updated per share/innocent-pear/keyboard.cc
		- now includes derp.h via bbq.h, as it should

		include/innocent-pear/rofl.h :
		- now defines rofl<...>::ptrace_raw(...) under Linux even
		  if rofl<...>::ptrace_lib(...) is undefined...

		include/innocent-pear/omg.h :
		- tweaked output of signal-unsafe and terminal-unsafe code

		test/infra/travis-install-deps.sh :
		- now installs clang if specified as target-side compiler

		lolwutconf/ :
		- bumped to 94151c6e6f

		.gitignore :
		- added *.tmp

2016-07-20	Somewhat minor fixes.

		include/innocent-pear/omg.h :
		- no longer defines omg<...>::Which2 and omg<...>::Which3
		  when unneeded

		include/innocent-pear/rofl.h :
		- fixed silly syntax errors which rear their heads when
		  TCXONC is absent

		lolwutconf/ :
		- bumped to cc40606132

2016-07-19	"There is nothing new under the sun, but there are lots of
		 old things we don't know yet."

		configure :
		- now also looks for mt19937_64 in standard C++ headers
		- now checks that at least one of {std::mt19937_64, boost::
		  mt19937_64}, one of {std::uint64_t, ::uint64_t}, and one
		  of {std::uintptr_t, ::uintptr_t} are defined

		GNUmakefile :
		- now makes $(config.h.host) rope in mt19937_64 definition

		share/innocent-pear/omnomnom.lxx :
		- now looks for mt19937_64 definition as detected by
		  `configure' script

		lolwutconf/ :
		- bumped to 66b1103cf5

		test/infra/travis-install-deps.sh :
		- removed libboost-dev installation

		README.md :
		- added `git clone ...' command, to show `--recursive' option

2016-07-15	Flow control.

		include/innocent-pear/rofl.h :
		- implemented rofl<...>::tcflow(...)
		- other minor tweaks

		include/innocent-pear/omg.h :
		- now tries to call rofl<...>::tcflow(, TCOOFF) if allowed

		share/innocent-pear/doge-1.ccc ,
		- now uses rofl<...>::tcflow(...)
		- tweaked mangling of address via ptrace(...)

		share/innocent-pear/doge-3.ccc :
		- now uses rofl<...>::tcflow(...)

		configure :
		- now probes _values_ of TCOOFF, TCOON, TCXONC, TIOCSTOP, and
		  TIOCSTART

		GNUmakefile :
		- now defines more macros in $(config.h.target)

		lolwutconf/ :
		- bumped from 684f245d41 to 905237db95

2016-07-14	Save the namespace!

		include/innocent-pear/rofl.h :
		- now no longer includes <sys/ioctl.h>; this is to avoid
		  polluting the macro namespace with ioctl numbers

		GNUmakefile :
		- fixed typo: $(conf_Have_cxx_typ_struct__bbfd) -> $(conf_
		  Have_cxx_typ_struct_bbfd)

		bin/innocent-pear-doge.ccc :
		- removed all string scrambling, to save compilation time

2016-07-12	Mostly compatibility fixes.

		configure :
		- now checks type of host-side wchar_t (again)
		- now looks for std::mbrtowc(...) and ::mbrtowc(...), in
		  case host implements neither mbrtoc16(...) nor
		  mbrtoc32(...)
		- now checks for __asm goto(...) support for both host and
		  target
		- now includes both <sys/types.h> and <sys/ptrace.h> when
		  probing for ptrace(...) constants
		- removed probing for PT_GETREGS and PT_SETREGS
		- added probing for tcflow(...) and friends

		GNUmakefile :
		- $(conf_Have_cxx_typ_struct_x20_bfd) -> $(conf_Have_cxx_
		  typ_struct__bbfd), following lolwutconf/ update
		- modified $(config.h.host) and $(config.h.target) outputs
		  per changes in `configure'
		- added rule for compiling bin/*.ii to bin/*.s, for debugging

		lolwutconf/ :
		- bumped from 3473dd81a3 to 684f245d41

		include/innocent-pear/dawg.h :
		- moved operator<<(...) into innocent_pear::impl:: namespace

		include/innocent-pear/kthxbai.h ,
		include/innocent-pear/lolwut.h ,
		include/innocent-pear/rofl.h :
		- minor clang compatibility tweaks

		include/innocent-pear/omg.h :
		- now uses __asm goto(...) only when supported

		share/innocent-pear/omnomnom.lxx :
		- now uses mbrtowc(...) if host and target use the same
		  wchar_t, instead of mbrtoc16(...) or mbrtoc32(...)

2016-07-10	"This error code has no purpose."

		include/innocent-pear/bbq.h :
		- starting to include ops_flags_t flags indicating doctored
		  states which code can be assumed to be running under

		include/innocent-pear/omg.h :
		- now uses rofl<...> to issue syscalls, instead of calling
		  C library functions
		- redid pseudorandom state advancements

		include/innocent-pear/rofl.h :
		- `syscall' instructions on x86-64 are now correctly marked
		  as clobbering %rcx and %r11
		- added getpid(), getppid(), kill(...), and ioctl(...) to
		  rofl<...>
		- now properly forward-references kthxbai<...>

		test/test-dawg-syn.ccc ,
		test/test-dawg-syn.good :
		- reduced stress-testing to save memory during compilation

		test/test-orly.ccc :
		- added allow_all tests

		README.md :
		- now focuses on the command line interface

2016-07-08	armv4t workaround, and value splitting.

		include/innocent-pear/rofl.h :
		- worked around register allocation issue in rofl_impl_
		  syscall<...>::syscall(...) when compiling for armv4t

		include/innocent-pear/kthxbai.h :
		- kthxbai<...> can now split integer values into parts

2016-07-06	Much saner pseudorandomness, and more for ptrace(...).

		include/innocent-pear/bbq.h :
		- now uses uint64_t instead of uint_least64_t
		- innocent_pear::impl::update_outer(...) now needs one more
		  parameter to select the pseudorandom generator

		GNUmakefile :
		- now uses uint64_t instead of uint_least64_t
		- $(conf_Have_cxx_typ_struct_bfd) ->
		  $(conf_Have_cxx_typ_struct_x20_bfd)

		bin/innocent-pear-c++.ccc ,
		include/innocent-pear/host/lolcat.h ,
		share/innocent-pear/calm.ccc ,
		share/innocent-pear/keyboard.ccc ,
		share/innocent-pear/nomnom.cc :
		- now uses uint64_t instead of uint_least64_t

		configure :
		- now looks for uint64_t instead of uint_least64_t

		include/innocent-pear/dawg.h ,
		include/innocent-pear/host/rly.h ,
		include/innocent-pear/host/srsly.h ,
		include/innocent-pear/kthxbai.h ,
		include/innocent-pear/lolwut.h ,
		include/innocent-pear/omg.h ,
		include/innocent-pear/orly.h ,
		include/innocent-pear/rofl.h ,
		include/innocent-pear/yarly.h :
		- updated update_outer(...) calls, and internal templates, to
		  select the pseudorandom generator per the number of levels

		share/innocent-pear/doge-1.ccc :
		- upped the number of recursion layers for ptrace(...) call

2016-07-03	Minor cleanup.

		include/innocent-pear/yarly.h :
		- removed unneeded yarly_impl<...>::NewNewState definition

2016-07-01	"An apple a day makes 365 apples a year."

		GNUmakefile :
		- updated to use unambiguous C++ name escaping scheme in
		  lolwutconf/

		lolwutconf/ :
		- bumped from commit eeb2d750ff to 3473dd81a3

2016-06-17	A bit more template parameter checking.

		include/innocent-pear/yarly.h :
		- now checks that type T in yarly<, T, ...> is legitimate

2016-06-12	Some template parameter checking.

		include/innocent-pear/kthxbai.h :
		- now checks that type T in kthxbai<, T, ...> is legitimate

2016-06-10	Now scrambles almost the whole text section (on Linux).

		GNUmakefile :
		- added share/innocent-pear/doge-3.ccc and share/innocent/
		  doge-4.cc to host-side installables

		bin/innocent-pear-c++.ccc :
		- now compiles and passes doge-3.o and doge-4.o to the g++
		  front-end
		- now scrambles output executable's text section in two passes

		share/innocent-pear/doge-1.ccc :
		- unscramble() is now in .text.unlikely, not .text.startup
		- now unscrambles from .text.unlikely (after itself) to
		  .text.hot
		- now unprotects memory from .text.unlikely to .text.end

		share/innocent-pear/doge-2.cc :
		- tweaked formatting

		share/innocent-pear/doge-3.ccc ,
		share/innocent-pear/doge-4.cc :
		- initial version

		share/innocent-pear/doge-8.ccc :
		- now reprotects memory from .text.unlikely to .text.end

		share/innocent-pear/doge-9.cc :
		- now marks ends of .text.hot and .gnu.linkonce.t.*

		test/test-doge.ccc ,
		test/test-doge.good :
		- added some action into main()

		include/innocent-pear/omg.h :
		- fixed `mov's from %cs into memory for x86-64

2016-06-04	"Anybody can win, unless there happens to be a second entry."

		bin/innocent-pear-c++.ccc :
		- now uses _.innocent_pear.text.unlikely.start rather than
		  _.innocent_pear.text.startup.start

		bin/innocent-pear-doge.ccc :
		- now checks for _dynamic_ relocations within the area to frob

		share/innocent-pear/doge-1.ccc :
		- moved unscrambling routine from .text.startup into
		  .text.unlikely, which occurs first per the default ld script
		- now uses _.innocent_pear.text.unlikely.start rather than
		  _.innocent_pear.text.startup.start

		share/innocent-pear/doge-2.cc :
		- now also defines _.innocent_pear.text.unlikely.start

2016-05-27	Name change: Biting Pear is now Innocent Pear.

		.gitignore ,
		GNUmakefile ,
		README.md ,
		test/test-dawg-syn.ccc ,
		test/test-dawg.ccc ,
		test/test-doge.ccc ,
		test/test-kthxbai-p.ccc ,
		test/test-kthxbai.ccc ,
		test/test-orly-wut.ccc ,
		test/test-orly-wut.ld ,
		test/test-orly.ccc ,
		test/test-yodawg-syn.ccc ,
		test/test-yodawg.ccc :
		- biting pear -> innocent pear

		bin/innocent-pear-c++.ccc :
		- renamed from bin/biting-pear-c++.ccc
		- biting pear -> innocent pear

		bin/innocent-pear-doge.ccc :
		- renamed from bin/biting-pear-doge.ccc
		- biting pear -> innocent pear

		include/innocent-pear/omg.h :
		- moved from include/biting-pear/ to include/innocent-pear/
		- on x86-32, now emits `int $0x80' as junk instruction
		  instead of `call *%gs:0x10'
		- biting pear -> innocent pear

		include/innocent-pear/bbq.h ,
		include/innocent-pear/dawg.h ,
		include/innocent-pear/doge.h ,
		include/innocent-pear/host/lolcat.h ,
		include/innocent-pear/host/rly.h ,
		include/innocent-pear/host/srsly.h ,
		include/innocent-pear/kthxbai.h ,
		include/innocent-pear/lolwut.h ,
		include/innocent-pear/nowai.h ,
		include/innocent-pear/orly.h ,
		include/innocent-pear/rofl.h ,
		include/innocent-pear/yarly.h ,
		include/innocent-pear/yodawg.h :
		- moved from include/biting-pear/ to include/innocent-pear/
		- biting pear -> innocent pear

		share/innocent-pear/calm.ccc ,
		share/innocent-pear/doge-1.ccc ,
		share/innocent-pear/doge-2.cc ,
		share/innocent-pear/doge-8.ccc ,
		share/innocent-pear/doge-9.cc ,
		share/innocent-pear/keyboard.ccc ,
		share/innocent-pear/nomnom.cc ,
		share/innocent-pear/omnomnom.lxx :
		- moved from share/biting-pear/ to share/innocent-pear/
		- biting pear -> innocent pear

2016-05-23	ptrace(...) support, mainly for some Linux/* platforms.

		configure :
		- now tries to detect whether ptrace(...) is defined and
		  implemented, and whether PT_TRACE_ME, PT_GETREGS,
		  PT_SETREGS, PT_READ_{I, D, U} are defined

		GNUmakefile :
		- now writes ptrace(...) detection macro definitions in
		  $(config.h.target)

		include/biting-pear/rofl.h :
		- now defines biting_pear::rofl::ptrace(...)
		- fixed compilation problem with biting_pear::impl::
		  rofl_impl_mprotect<...>

		share/biting-pear/doge-1.ccc :
		- now tries to mix results of ptrace(PT_TRACE_ME,,,) into
		  computation

		lolwutconf/ :
		- bumped from commit 9272622875 to eeb2d750ff

2016-05-15	Very slight tweak in the directory structure.

		test/infra/travis-install-deps.sh :
		- moved from test/

		.travis.yml :
		- updated path to travis-install-deps.sh

2016-05-08	"Business will be either better or worse."

		include/biting-pear/rofl.h :
		- can now scramble syscalls of <= 3 arguments on ARM Thumb
		- removed special casing of x86-64 syscall scrambling for
		  4, 5, and 6 arguments --- these need further testing
		- added rofl<...>::clear_cache(...); rofl<...>::memset(.) now
		  uses it

		share/biting-pear/doge-1.ccc :
		- now uses rofl<...>::clear_cache(...)

2016-05-01	"... the impacts of this option are callees may waste some
		stack space, misbehave or jump to a random location."

		include/biting-pear/lolwut.h :
		- tweaked impl::lolwut_impl<...>::set(, 2) to split the two
		  instructions for reading the GOT into two __asm commands

		include/biting-pear/rofl.h :
		- rofl_impl_syscall<...>::re_arg(.) now also casts `enum'
		  arguments appropriately

		lolwutconf/ :
		- bumped from commit 69104ce926 to 9272622875

		test/travis-install-deps.sh :
		- now recognizes a few more specific CPU types for x86-32

2016-04-30	g++ 5 compatibility.

		include/biting-pear/lolwut.h :
		- fixed scrambling of library function addresses under g++ 5
		  for x86-32
		- now does a `#pragma message' when compiling under buggy
		  g++ for ARM

		include/biting-pear/rofl.h :
		- can now scramble syscalls on x86-32 and x86-64, and
		  partially scramble syscalls on other platforms
		- added rofl<...>::mprotect(...)

		share/biting-pear/doge-1.ccc ,
		share/biting-pear/doge-8.ccc :
		- now uses rofl<...>::mprotect(...)

		share/biting-pear/omnomnom.lxx :
		- fixed handling of ?<...> to prevent generated numbers from
		  being output before a preprocessor directive on the same
		  line

		GNUmakefile :
		- rule for include/biting-pear/derp.h (and .../host/derp.h)
		  now pulls ::uintptr_t or std::uintptr_t into biting_pear::
		  impl namespace

		configure :
		- added probe of ::uintptr_t and std::uintptr_t for target
		- removed host endianness check

		.travis.yml :
		- added environment settings for using g++ 5

		test/travis-install-deps.sh :
		- now tries to install g++ 5 if .travis.yml says to
		- added `flex' as a prerequisite package

2016-04-19	"And he was clad in cote and hood of grene."  (2)

		include/biting-pear/lolwut.h :
		- position-independent munging of function pointers now
		  works properly on x86-32

		include/biting-pear/omg.h :
		- fixed operator precedence bug
		- minor fix:  added proper "cc" clobbers for x86-32, x86-64,
		  and ARM

		include/biting-pear/kthxbai.h :
		- minor fix:  added proper "cc" clobber for x86-32 `arplw'

		include/biting-pear/host/rly.h :
		- fixed default parameter values in rly<T, Levels>::
		  operator()(...)

		include/biting-pear/yarly.h :
		- removed redundant condition check

2016-04-17	"And he was clad in cote and hood of grene."

		share/biting-pear/doge-8.ccc :
		- munged call to mprotect(...)
		- added optimize("no-reorder-blocks") attribute for the
		  wiping routine

2016-04-14	Memory wiping on ARM.

		include/biting-pear/rofl.h :
		- specific implementations of biting_pear::rofl<...> for ARM
		- slight tweak of biting_pear::rofl<...> for x86-32 and
		  x86-64

2016-04-12	ARMv4 workaround; added ARMv4t target.

		include/biting-pear/lolwut.h :
		- added workaround for g++ 4.7 bug triggered when compiling
		  for ARMv4 sans Thumb

		.travis.yml :
		- added armv4t-linux-gnueabi target platform
		- reordered target platforms

2016-04-11	Improved memory wiping on x86-32 and x86-64.

		include/biting-pear/rofl.h :
		- initial version

		share/biting-pear/doge-8.ccc :
		- renamed from doge-8.cc
		- now uses biting_pear::rofl<...>

		bin/biting-pear-c++.ccc :
		- share/biting-pear/doge-8.cc -> share/biting-pear/doge-8.ccc

		GNUmakefile :
		- added include/biting-pear/rofl.h as a dependency
		- share/biting-pear/doge-8.cc -> share/biting-pear/doge-8.ccc

		.travis.yml :
		- added armv4-linux-gnueabi target platform

2016-03-27	Split lolwutconf into its own project.

		lolwutconf/* :
		- split into a different GitHub project, https://github.com/
		  tkchia/lolwutconf

		.gitmodules :
		- initial version

		.travis.yml ,
		test/travis-install-deps.sh :
		- added i686-linux-gnu target platform

2016-03-26	Trying out Travis CI.

		.travis.yml ,
		test/travis-install-deps.sh :
		- initial version

		bin/biting-pear-doge.ccc :
		- removed (not-very-useful) scrambling of BFD function names
		  in error messages

		include/biting-pear/kthxbai.h :
		- fixed use of arplw instruction for x86-32

		README.md :
		- added link to Travis build status

2016-03-21	Tweaks.

		bin/biting-pear-c++.ccc :
		- `-Xbiting-pear -doge' now invokes biting-pear-c++
		  recursively, and passes -v to recursive subprocesses

		share/biting-pear/doge-1.ccc :
		- share/biting-pear/doge.cc ~> share/biting-pear/doge.ccc
		- added confusion

		GNUmakefile :
		- share/biting-pear/doge.cc ~> share/biting-pear/doge.ccc

2016-03-15	Beefed up on the documentation a bit.

		README.md :
		- added `-Xbiting-pear -doge' option for `biting-pear-c++'
		- added `--target-dir=...' option for `configure'
		- corrected C++ usage to use `#include <...>', not `#include
		  "..."'

2016-03-13	ELF/ARM assembly tweak.

		include/biting-pear/lolwut.h :
		- ELF/ARM code now uses `.subsection ...' and `.previous'
		  instead of `.pushsection ...' and `.popsection' to emit
		  relocated constants, to allow these constants to appear in
		  text sections other than `.text'

		GNUmakefile :
		- minor debugging patch

2016-03-12	Now implements `-Xbiting-pear -doge'!

		GNUmakefile :
		- got `-Xbiting-pear -doge' working
		- added test-doge test case

		bin/biting-pear-c++.ccc :
		- got `-Xbiting-pear -doge' working

		include/biting-pear/doge.h ,
		share/biting-pear/doge-1.cc ,
		share/biting-pear/doge-2.cc ,
		share/biting-pear/doge-8.cc ,
		share/biting-pear/doge-9.cc ,
		test/test-doge.ccc ,
		test/test-doge.good :
		- initial version

		configure :
		- added check for __attribute__((constructor(.))) support
		- turned off check for overridable __libc_csu_init(...)

		lolwutconf/c++.target.inc :
		- added conf_cxxt_probe_ctor_priority()

		share/biting-pear/epic.ccc :
		- fixed curious(.) to call lstat(...) instead of stat(...)

		.gitignore :
		- added test-doge

2016-03-08	Squirrel!  (2)

		configure ,
		lolwutconf/c++.target.inc :
		- now tries to detect if target compiler produces shared or
		  static executables

		GNUmakefile :
		- now defines biting_pear_DYN_LD_CXX_TARGET macro for
		  host-side C++ files
		- fixed separation of host-side rules and target-side rules

		bin/biting-pear-c++.ccc :
		- now defines biting_pear_DYN_LD_CXX_TARGET macro for
		  target-side C++ files, when using `-Xbiting-pear -doge'

2016-03-07	Compiler wrapper front-end now understands and processes
		`-Xbiting-pear -doge'.  Back-end, not so much.

		bin/biting-pear-c++.ccc :
		- now processes `-Xbiting-pear -doge'

		include/biting-pear/host/lolcat.h ,
		share/biting-pear/calm.ccc ,
		share/biting-pear/keyboard.ccc :
		- factored out keyboard(...), keyboarder(...),
		  keyboardest(...), and sleepier(...) from share/biting-
		  pear/calm.ccc

		share/biting-pear/nomnom.cc :
		- bug fix: file_crc64(...) now returns init_crc instead of 0
		  if the file cannot be opened

		GNUmakefile :
		- now defines biting_pear_CXXFLAGS_FOR_TARGET in
		  $(config.h.host)
		- updated dependencies for bin/biting-pear-c++ and share/
		  biting-pear/calm

2016-03-04	Squirrel!

		include/biting-pear/host/lolcat.h ,
		share/biting-pear/epic.ccc :
		- added squirrel(...)

		bin/biting-pear-doge.ccc ,
		share/biting-pear/calm.ccc :
		- now uses squirrel(...); removed all direct dealings with
		  std::cerr

		bin/biting-pear-c++.ccc :
		- now uses squirrel(...); removed all direct dealings with
		  std::cerr
		- fixed glitch in handling `-Xbiting-pear -doge'
		- fixed glitch in handling `-c', `-S', and `-E'

		GNUmakefile :
		- tweaked test output

2016-03-03	Ad astra per alas porci.  (6)

		include/biting-pear/host/lolcat.h :
		- initial version; declarations split and modified from bin/
		  biting-pear-doge.ccc

		bin/biting-pear-c++.ccc :
		- changed `-Xbiting-pear prefix=...' and `-Xbiting-pear
		  target-prefix=...' to `-Xbiting-pear -prefix=...' and
		  `-Xbiting-pear -target-prefix=...'
		- added `-Xbiting-pear -doge', still unimplemented
		- refactored per lolcat.h

		bin/biting-pear-doge.ccc ,
		share/biting-pear/calm.ccc ,
		share/biting-pear/nomnom.cc :
		- refactored per lolcat.h

		share/biting-pear/epic.ccc :
		- renamed from epic.cc to epic.ccc
		- refactored per lolcat.h

		GNUmakefile :
		- changed `-Xbiting-pear prefix=...' and `-Xbiting-pear
		  target-prefix=...' to `-Xbiting-pear -prefix=...' and
		  `-Xbiting-pear -target-prefix=...'
		- modified biting-pear-doge invocation not to use temporary
		  file name
		- fixed dependencies

2016-02-29	Ad astra per alas porci.  (5)

		configure ,
		lolwutconf/c++.target.inc :
		- now checks if target platform uses a __libc_csu_init(...)
		  that is overridable

		lolwutconf/configure.inc :
		- slightly reformatted comments

2016-02-28	Yo doge, we herd you like doge...

		bin/biting-pear-doge.ccc :
		- fixed bug causing BFD internal errors
		- now atomically creates output file

2016-02-27	"Praise doge."

		test/test-orly-wut.ccc ,
		test/test-orly-wut.ld ,
		test/test-orly-wut.good :
		- initial version

		include/biting-pear/host/srsly.h ,
		include/biting-pear/orly.h :
		- fixed rather dumb bug in wut(...) state initialization

		include/biting-pear/kthxbai.h :
		- fixed namespacing glitch for forward declaration of
		  biting_pear::omg

		include/biting-pear/lolwut.h :
		- fixed lolwut(, 3) case for ARM

		GNUmakefile :
		- added test-orly-wut test case
		- fixed compilation of test cases

		.gitignore :
		- added test-orly-wut

2016-02-26	Confusion and enhancements.  (3)

		include/biting-pear/lolwut.h :
		- x86-64:
		  - simplified code for deriving `leaq' displacement
		  - lowered threshold for splitting displacement into two
		  - improved comments

2016-02-25	Confusion and enhancements.  (2)

		include/biting-pear/kthxbai.h :
		- now obscures addresses of constants emitted in read-only
		  and read/write data sections

		include/biting-pear/lolwut.h :
		- improved comments
		- x86-64 `leaq' inline assembly statements are no longer
		  marked as modifying the condition flags, while x86-32
		  `addl' statements are thus marked
		- added handling of addresses of static constants

		GNUmakefile :
		- added `share/biting-pear/%.s: share/biting-pear/%.ii' rule
		  for debugging

2016-02-24	Confusion and enhancements.

		bin/biting-pear-doge.ccc :
		- now allows relocations in object file being frobbed ---
		  only the frobbed section needs to be relocation-free

		include/biting-pear/kthxbai.h :
		- now deliberately emits constants in static read-only and
		  read/write data sections

		include/biting-pear/orly.h :
		- added orly<...>::wut(...)

		GNUmakefile :
		- fixed `%.s: %.ccc' rule

2016-02-21	Renamed test cases.

		test/test-kthxbai.ccc ,
		test/test-kthxbai.good :
		- renamed test-1 to test-kthxbai

		test/test-kthxbai-p.ccc ,
		test/test-kthxbai-p.good :
		- renamed test-2 to test-kthxbai-p

		test/test-orly.ccc ,
		test/test-orly.good :
		- renamed test-3 to test-orly

		test/test-dawg.ccc ,
		test/test-dawg.good :
		- renamed test-extra-1 to test-dawg

		test/test-yodawg.ccc ,
		test/test-yodawg.good :
		- renamed test-extra-2 to test-yodawg

		test/test-dawg-syn.ccc ,
		test/test-dawg-syn.good :
		- renamed test-extra-3 to test-dawg-syn

		test/test-yodawg-syn.ccc ,
		test/test-yodawg-syn.good :
		- renamed test-extra-4 to test-yodawg-syn

		GNUmakefile ,
		.gitignore :
		- updated

2016-02-20	Some x86 and x86-64 enhancements, and a bit more.

		GNUmakefile :
		- updated %.s rule

		include/biting-pear/omg.h :
		- now adds a random prefix before `retl'/`retq'/`lretl'/
		  `lretq' on x86 and x86-64
		- now also adds junk bytes for x86-64

		test/test-extra-3.ccc :
		- really stress-test...

		test/test-extra-3.good :
		- updated

		bin/biting-pear-c++.ccc :
		- now sets $BITING_PEAR_DRIVER_CXX, for later use

2016-02-14	Position-independent executable support.

		configure :
		- now includes `-pie' in $CXXFLAGS and $CXXFLAGS_FOR_TARGET
		  on default

		include/biting-pear/lolwut.h :
		- fixed handling of function pointers for x86-64 so that it
		  works work `-pie'
		- fixed precedence bug in lolwut<...>::operator T *()

		include/biting-pear/omg.h :
		- fixed a minor assembly bug in omg_impl_0<..., 0u>

2016-02-11	Ad astra per alas porci.  (4)

		include/biting-pear/omg.h :
		- now uses only `bx' and `blx' in ARM code when compiling
		  for the appropriate platforms

2016-02-10	Ad astra per alas porci.  (3)

		include/biting-pear/kthxbai.h :
		- added arplw instruction for x86-32

		include/biting-pear/omg.h :
		- fixed mov %cs, ... assembly glitch for x86-32

		GNUmakefile :
		- fixed glitch in compiling bin/biting-pear-doge.ccc

2016-02-09	Ad astra per alas porci.  (2)

		bin/biting-pear-doge.ccc ,
		GNUmakefile ,
		.gitignore :
		- share/biting-pear/doge.ccc -> bin/biting-pear-doge.ccc

2016-02-08	Ad astra per alas porci.

		share/biting-pear/doge.ccc :
		- now requires a `seed' argument

2016-02-04	License change.  Indirect jumps, continued.

		include/biting-pear/omg.h :
		- try to move %cs read further away from its use

		test/test-extra-3.ccc :
		- now creates several "Hello, world!" strings to stress-test
		  the scrambling

		test/test-extra-3.good :
		- updated

		LICENSE :
		- changed to the GNU GPL v3, for releases from here on

2016-02-03	Yet another type of indirect jump.

		include/biting-pear/omg.h :
		- added far returns

2016-01-31	A bit more refactoring.

		share/biting-pear/calm.ccc :
		- restructured code for invoking cc1plus and echoing command
		  line arguments

2016-01-27	Slightly better documentation.

		README.md :
		- added some installation instructions

2016-01-24	A bit of refactoring.

		GNUmakefile ,
		bin/biting-pear-c++.ccc ,
		share/biting-pear/calm.ccc :
		- factored out shocked(.) and curious(...) to share/biting-
		  pear/epic.cc

		share/biting-pear/epic.cc :
		- initial version; split from share/biting-pear/calm.ccc

2016-01-23	Nice wrapper.

		.gitignore :
		- added *.ii and calm, removed nomnom

		GNUmakefile :
		- updated to build and use wrapper
		- now preprocesses to .ii files instead of .i files
		- now builds internal passes from share/biting-pear/ rather
		  than libexec/biting-pear/
		- $(config.h.host) and $(config.h.target) now depend on
		  config.cache
		- now defines biting_pear::impl::getenv(.) in $(config.h.host)
		- fixed installation of host files

		bin/biting-pear-c++.ccc ,
		share/biting-pear/calm.ccc ,
		share/biting-pear/calm.spec :
		- initial version

		configure :
		- now probes for secure_getenv(.)

		share/biting-pear/doge.ccc :
		- moved from libexec/biting-pear/doge.ccc

		share/biting-pear/nomnom.cc :
		- moved from libexec/biting-pear/nomnom.cc
		- is now a module (used by calm.ccc) rather than a
		  stand-alone program

		share/biting-pear/omnomnom.lxx :
		- moved from libexec/biting-pear/omnomnom.lxx
		- now uses a default seed if no seed is specified, rather
		  than a (half-baked) random seed

		include/biting-pear/omg.h ,
		lolwutconf/configure.inc :
		- minor fixes

2016-01-09	Touch-ups.

		GNUmakefile :
		- now uses $conf_Host_exec when running $CXX_FOR_TARGET
		- changed handling of target-side wchar_t
		- `make clean' no longer zaps config.cache
		- fixed bug in #define of biting_pear_decltype

		configure :
		- now looks for mbrtoc16(...) and mbrtoc32(...) in
		  <cuchar> and <uchar.h>

		libexec/biting-pear/omnomnom.lxx :
		- changed handing of target-side wchar_t

		lolwutconf/configure.inc :
		- now looks for `seq' program
		- now tries to derive target installation directory
		  (--target-prefix=) more intelligently, with a
		  conf__find_good_runtime_prefix() function
		- now makes sure that host prefix (--prefix=) is absolute
		- other minor fixes

		lolwutconf/c++.common.inc :
		- now uses conf__find_good_runtime_prefix() when determining
		  host/target program executor command line

		lolwutconf/c++.inc :
		- added conf_cxx_probe_func()

		lolwutconf/c++.target.inc :
		- now uses $conf_Host_exec when running $CXX_FOR_TARGET
		- fixed bug in conf_cxxt_probe_wchar_typ()

2016-01-03	Canadian cross.

		.gitignore :
		- updated

		GNUmakefile :
		- updated for "Canadian cross" setup
		- updated names of helper programs
		- now uses $(conf_Srcdir) etc. instead of $(srcdir) etc.

		configure :
		- updated for "Canadian cross" setup
		- now probes precise type of wchar_t for host and target

		lolwutconf/c++.common.inc :
		- initial version; some routines split from lolwutconf/
		  c++.inc

		lolwutconf/c++.inc :
		- updated for "Canadian cross" setup
		- moved some logic out to lolwutconf/c++.common.inc
		- conf_cxx_probe_endianness() now properly cleans up
		  temporary file
		- added conf_cxx_probe_wchar_typ()

		lolwutconf/c++.target.inc :
		- initial version; much code duplicated from lolwutconf/
		  c++.inc

		lolwutconf/configure.inc :
		- updated for "Canadian cross" setup
		- now uses $(conf_Srcdir) etc. instead of $(srcdir) etc.
		- fixed silly bug in initial `unset'
		- conf__mktemp() no longer uses `local -' --- bash
		  does not understand it

		lolwutconf/lolwutconf.mk :
		- updated for "Canadian cross" setup
		- now uses $(conf_Srcdir) etc. instead of $(srcdir) etc.

		libexec/biting-pear/nomnom.cc :
		- moved from helper/crc64.cc

		libexec/biting-pear/omnomnom.lxx :
		- moved from helper/postpreproc.lxx
		- now checks host and target wchar_t compatibility for
		  []L"..." and $L"..."

		libexec/biting-pear/doge.ccc :
		- moved from util/biting-pear-doge.ccc
		- now includes <biting-pear/host/srsly.h> instead of
		  <biting-pear/srsly.h>

		include/biting-pear/bbq.h :
		- now includes different configuration header files on
		  host and target

		include/biting-pear/host/rly.h :
		- moved from include/biting-pear/rly.h

		include/biting-pear/host/srsly.h :
		- moved from include/biting-pear/srsly.h
		- now includes <biting-pear/host/rly.h> instead of
		  <biting-pear/rly.h>

		include/biting-pear/lolwut.h ,
		include/biting-pear/omg.h :
		- now only uses certain __asm constructs when compiling
		  with optimization

2015-12-29	For great random.  (2)

		include/biting-pear/srsly.h :
		- simplified

2015-12-28	For great random.

		include/biting-pear/rly.h ,
		include/biting-pear/srsly.h :
		- initial version

		include/biting-pear/yarly.h :
		- fixed really, really silly operator precedence bug
		- fixed really, really silly modulo bug

		util/biting-pear-doge.ccc :
		- now uses srsly.h

		GNUmakefile :
		- added rly.h and srsly.h as header dependencies

2015-12-26	And now for something remotely different.

		util/biting-pear-doge.ccc :
		- initial draft

		GNUmakefile :
		- now builds util/biting-pear-doge

		configure :
		- now probes for GNU BFD library

		include/biting-pear/dawg.h :
		- biting_pear::dawg_impl<...> now has default and copy
		  constructors
		- reduced template recursion levels, to make compilation
		  tractable

		lolwutconf/c++.inc :
		- added conf_cxx_probe_lib()

		.gitignore :
		- updated

2015-12-13	Syntactic sugar for strings.

		helper/postpreproc.lxx :
		- renamed from helper/postpreproc-2.lxx
		- added $"..." and $L"..."

		GNUmakefile :
		- added test cases for $"..." and $L"..."
		- now automatically invokes ./configure if config.cache
		  is absent
		- now builds helper/postpreproc and not helper/postpreproc-2

		test/test-extra-3.ccc ,
		test/test-extra-3.good ,
		test/test-extra-4.ccc ,
		test/test-extra-4.good :
		- initial version

		.gitignore :
		- updated

2015-11-24	getpid() and getppid().

		include/biting-pear/omg.h :
		- now makes bogus calls to getpid() and getppid() if signal-
		  -safe calls are allowed

		test/test-1.ccc ,
		test/test-2.ccc :
		- added allow_all tests

2015-09-27	Minor improvement.

		GNUmakefile :
		- now makes $(config.h) define `biting_pear_decltype'

		configure ,
		lolwutconf/c++.inc :
		- now checks for `decltype' support

		include/biting-pear/dawg.h ,
		include/biting-pear/omg.h ,
		test/test-2.ccc :
		- switched from using `__typeof' to using
		  `biting_pear_decltype'

		helper/postpreproc-2.lxx :
		- now rejects non-shortest UTF-8 character encodings
		- now checks for and rejects encodings of UTF-16
		  surrogate code points (\ud800--\udfff)

2015-09-24	Strings and more strings.

		GNUmakefile :
		- now outputs biting_pear_HAVE_CXX_VAR_TPLS macro
		- now runs test programs under en_US.UTF-8 locale
		- added <biting-pear/dawg.h>, <biting-pear/yodawg.h>,
		  test/test-extra-1, test/test-extra-2

		configure :
		- added specific test for C++11 variadic templates

		lolwutconf/c++.inc :
		- added specific test for C++11 variadic templates
		- fixed minor bug in conf_cxx_probe_endianness()
		- fixed minor bug in conf_cxx_chk_compiler_and_executor()

		include/biting-pear/dawg.h ,
		include/biting-pear/yodawg.h ,
		test/test-extra-1.ccc ,
		test/test-extra-1.good ,
		test/test-extra-2.ccc ,
		test/test-extra-2.good :
		- initial version

		include/biting-pear/kthxbai.h :
		- reduced template recursion levels to 3
		- now uses biting_pear_HAVE_CXX_VAR_TPLS

		include/biting-pear/lolwut.h ,
		include/biting-pear/omg.h :
		- reduced template recursion levels to 3

		.gitignore :
		- added test-extra-1 and test-extra-2

2015-09-20	Strings and lines.

		helper/postpreproc-2.lxx :
		- fixed corner cases in handling of strings
		- now parses #line directives and outputs error messages
		  according to them
		- added string splitting construct

2015-09-19	Now cross-compiles everything or nothing.

		GNUmakefile :
		- helper/postproc* -> helper/postpreproc-2*
		- now cross-compiles everything
		- now uses $(conf_Host_exec) to run helper/crc64.cc and
		  helper/postpreproc-2.cc

		helper/postpreproc-2.lxx :
		- renamed from helper/postproc.lxx

		configure :
		- removed checks for build-side stuff

		lolwutconf/c++.inc :
		- removed checks for build-side stuff

		lolwutconf/configure.inc :
		- added --host-exec

		include/biting-pear/lolwut.h :
		- fixed syntax bug in lolwut_impl<>

		.gitignore :
		- postproc* -> postpreproc-2*

2015-08-07	Delirant isti Romani.

		include/biting-pear/kthxbai.h :
		- biting_pear::kthxbai<> now allows operations other than
		  +/- for the outermost step

		configure :
		- removed check for build-side endianness

2015-07-21	Added flags to specify which (erm) operations to allow.
		And, now checks for runaway template recursion.

		include/biting-pear/nowai.h :
		- new

		include/biting-pear/bbq.h :
		- added biting_pear::impl::ops_flags_t and flags constants

		include/biting-pear/kthxbai.h ,
		include/biting-pear/lolwut.h ,
		include/biting-pear/orly.h :
		- added `Flags' template argument before `Levels'
		- now uses nowai.h

		include/biting-pear/omg.h :
		- added `Flags' template argument before `Levels'
		- now uses nowai.h
		- now checks for and uses allow_signal_safes in flags
		- tweaked distribution of types of operations

		include/biting-pear/yarly.h :
		- added `Flags' template argument before `Levels'
		- now uses nowai.h
		- reduced levels for kthxbai_impl from 4 to 3

		test/test-1.ccc :
		- h0, h1, and h2 are now initialized with <...allow_all>

		README.md :
		- updated synopsis to have `flags' template argument before
		  `levels'

		GNUmakefile :
		- added include/biting-pear/nowai.h as a file to depend on
		  and install

		configure ,
		lolwutconf/c++.inc :
		- added host-side and build-side endianness detection (for
		  use later)

		lolwutconf/configure.inc :
		- now tests for `grep' and `strings' utilities

2015-07-17	o rly?  ya rly!

		include/biting-pear/orly.h ,
		include/biting-pear/yarly.h ,
		test/test-3.ccc ,
		test/test-3.good :
		- new

		GNUmakefile :
		- added include/biting-pear/orly.h and include/biting-pear/
		  yarly.h as dependencies in compilation
		- added test-3

		.gitignore :
		- added test-3

2015-07-11	Multiplication.

		include/biting-pear/bbq.h ,
		include/biting-pear/kthxbai.h :
		- added multiplication and inverse multiplication

2015-07-10	C++ compiler all the way.

		GNUmakefile :
		- now compiles helper/crc64 from helper/crc64.cc

		helper/crc64.cc :
		- renamed from helper/crc64.c; C++-ized
		- changed read(...) call to fread(...)

		helper/postproc.lxx :
		- removed parser backtracking
		- newline can now follow backslash in "..." and '...'

		include/biting-pear/lolwut.h :
		- multiple layers of pointer arithmetic

2015-07-08	ARM Thumb-32 support.  Reduced number of recursion levels
		from 6 to 5, so that compiler does not exhaust memory.

		include/biting-pear/kthxbai.h :
		- reduced recursion levels

		include/biting-pear/lolwut.h :
		- reduced recursion levels
		- added ARM Thumb-32 handling for lolwut(, 1) and (, 2)

		include/biting-pear/omg.h :
		- reduced recursion levels
		- ARM architecture: added ARM mode and Thumb mode handling

		lolwutconf/c++.inc :
		- now handles stuff like --host=armv7-a-linux-gnueabi
		- now tries to turn on Thumb mode when compiling for ARM

		lolwutconf/configure.inc :
		- more useful --help

		test/test-2.ccc :
		- added a few more printf(...) calls

2015-07-05	Somewhat better support for cross compilation in general.

		configure :
		- now checks for C++11 on build side

		lolwutconf/configure.inc :
		- added --host
		- added build environment sanity checks
		- now prefixes status messages with `* '
		- now uses POSIX character classes for `sed'

		lolwutconf/c++.inc :
		- now handles --host input, with special case for x86-32
		  compilation on x86-64
		- now checks for C++11 on build side

		include/biting-pear/omg.h :
		- fixed a minor bug

2015-07-04	Better x86-32 support.

		include/biting-pear/lolwut.h :
		- added handling of code pointers for x86-32

		include/biting-pear/omg.h :
		- added x86-32 control flows and junk syscalls

2015-07-03	Function pointers!

		include/biting-pear/lolwut.h :
		- added lolwut(, 2), for function pointers
		- lolwut(, 1):
		  - changed threshold for leaq -> leaq + addq/subq split
		    from 0x7fff0000 to 0x70000000
		  - for splits, took addq/subq out of __asm(...) so that g++
		    can move them around
		  - changed %c assembly operand modifier to %a

		include/biting-pear/kthxbai.h :
		- on C++11 compiler, now specially checks for function
		  pointer type and behaves differently in that case
		- code formatting tweaks

		README.md :
		- changed recommended way of assigning values from `var =
		  val' to `var(val)'
		- added mention of function pointers

		test/test-2.ccc ,
		test/test-2.good :
		- initial version

		GNUmakefile :
		- added test-2
		- marked test files as .PRECIOUS

		.gitignore :
		- added test-2

2015-06-30	`make check' now works.

		GNUmakefile :
		- added rule for `make check'
		- added %.o to .PRECIOUS

		configure ,
		lolwutconf/c++.inc :
		- moved most default CXXFLAGS flags into `configure'

		lolwutconf/configure.inc :
		- fixed bug in conf__barf()

		lolwutconf/lolwutconf.mk :
		- added `check' to .PHONY

		README.md :
		- `uint_least64_t' -> `std::uint_least64_t'

		test/test-1.good :
		- added

		.gitignore :
		- added derp.h

2015-06-27	Pre-C++11 compiler support.  And, added +=, -=, ++, and --
		for pointers.

		include/biting-pear/bbq.h :
		- now uses generated include/biting-pear/derp.h

		include/biting-pear/kthxbai.h ,
		include/biting-pear/lolwut.h ,
		- added +=, -=, ++, and -- for pointers

		lolwutconf/c++.inc ,
		lolwutconf/configure.inc ,
		lolwutconf/lolwutconf.mk :
		- initial version

		GNUmakefile :
		- moved some logic into lolwutconf/lolwutconf.mk
		- now checks for both <cinttypes> and <inttypes.h>
		- now creates include/biting-pear/derp.h

		configure :
		- moved most logic into lolwutconf/*
		- now checks for both <cinttypes> and <inttypes.h>

2015-06-22	Further internal cleanup.

		include/biting-pear/bbq.h ,
		include/biting-pear/kthxbai.h ,
		include/biting-pear/lolwut.h , 
		include/biting-pear/omg.h :
		- internally set biting_pear_t::impl::rand_state_t =
		  std::uint_least64_t
		- internally renamed `Seed' variables to `State'

2015-06-21	Autoconfiscated... well, not really.

		configure :
		- initial version; does --srcdir and --prefix

		GNUmakefile :
		- now tries to read from config.cache if present
		- added `distclean', `install', and `uninstall' rules
		- added $(..._FOR_BUILD) variables, for rudimentary support
		  for cross-compilation
		- now uses $(LDLIBS) (and $(LDLIBS_FOR_BUILD)) when linking
		- added support for building outside of source tree, e.g.
		  use of $(VPATH)
		- updated name: helper/postproc.ll -> helper/postproc.lxx

		helper/postproc.lxx :
		- renamed from helper/postproc.ll, to avoid confusion with
		  LLVM files

		include/biting-pear/kthxbai.h ,
		include/biting-pear/lolwut.h ,
		include/biting-pear/omg.h ,
		test/test-1.ccc :
		- now use #include <...>, not #include "..."

		.gitignore :
		- added config.cache

2015-06-16	Added some semblance of documentation.

		README.md :
		- added documentation

		helper/postproc.ll :
		- fixed bugs in input parsing and output

2015-06-15	Reorganized directories.  And, junk bytes.

		include/biting-pear/omg.h :
		- moved from biting-pear/ to include/biting-pear/
		- added junk bytes
		- added more types of indirect jumps

		include/biting-pear/lolwut.h ,
		include/biting-pear/kthxbai.h :
		- moved from biting-pear/ to include/biting-pear/
		- kthxbai<> with pointer type now hands over to lolwut<>

		include/biting-pear/bbq.h :
		- moved from biting-pear/ to include/biting-pear/

		test/test-1.ccc :
		- moved from top directory

		.gitignore :
		- initial version

2015-06-14	14 Jun 2015 version.
