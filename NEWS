2016-03-13	ELF/ARM assembly tweak.

		include/biting-pear/lolwut.h :
		- ELF/ARM code now uses `.subsection ...' and `.previous'
		  instead of `.pushsection ...' and `.popsection' to emit
		  relocated constants, to allow these constants to appear in
		  text sections other than `.text'

2016-03-12	Now implements `-Xbiting-pear -doge'!

		GNUmakefile :
		- got `-Xbiting-pear -doge' working
		- added test-doge test case

		bin/biting-pear-c++.ccc :
		- got `-Xbiting-pear -doge' working

		include/biting-pear/doge.h ,
		share/biting-pear/doge-1.cc ,
		share/biting-pear/doge-2.cc ,
		share/biting-pear/doge-8.cc ,
		share/biting-pear/doge-9.cc ,
		test/test-doge.ccc ,
		test/test-doge.good :
		- initial version

		configure :
		- added check for __attribute__((constructor(.))) support
		- turned off check for overridable __libc_csu_init(...)

		lolwutconf/c++.target.inc :
		- added conf_cxxt_probe_ctor_priority()

		share/biting-pear/epic.ccc :
		- fixed curious(.) to call lstat(...) instead of stat(...)

		.gitignore :
		- added test-doge

2016-03-08	Squirrel!  (2)

		configure ,
		lolwutconf/c++.target.inc :
		- now tries to detect if target compiler produces shared or
		  static executables

		GNUmakefile :
		- now defines biting_pear_DYN_LD_CXX_TARGET macro for
		  host-side C++ files
		- fixed separation of host-side rules and target-side rules

		bin/biting-pear-c++.ccc :
		- now defines biting_pear_DYN_LD_CXX_TARGET macro for
		  target-side C++ files, when using `-Xbiting-pear -doge'

2016-03-07	Compiler wrapper front-end now understands and processes
		`-Xbiting-pear -doge'.  Back-end, not so much.

		bin/biting-pear-c++.ccc :
		- now processes `-Xbiting-pear -doge'

		include/biting-pear/host/lolcat.h ,
		share/biting-pear/calm.ccc ,
		share/biting-pear/keyboard.ccc :
		- factored out keyboard(...), keyboarder(...),
		  keyboardest(...), and sleepier(...) from share/biting-
		  pear/calm.ccc

		share/biting-pear/nomnom.cc :
		- bug fix: file_crc64(...) now returns init_crc instead of 0
		  if the file cannot be opened

		GNUmakefile :
		- now defines biting_pear_CXXFLAGS_FOR_TARGET in
		  $(config.h.host)
		- updated dependencies for bin/biting-pear-c++ and share/
		  biting-pear/calm

2016-03-04	Squirrel!

		include/biting-pear/host/lolcat.h ,
		share/biting-pear/epic.ccc :
		- added squirrel(...)

		bin/biting-pear-doge.ccc ,
		share/biting-pear/calm.ccc :
		- now uses squirrel(...); removed all direct dealings with
		  std::cerr

		bin/biting-pear-c++.ccc :
		- now uses squirrel(...); removed all direct dealings with
		  std::cerr
		- fixed glitch in handling `-Xbiting-pear -doge'
		- fixed glitch in handling `-c', `-S', and `-E'

		GNUmakefile :
		- tweaked test output

2016-03-03	Ad astra per alas porci.  (6)

		include/biting-pear/host/lolcat.h :
		- initial version; declarations split and modified from bin/
		  biting-pear-doge.ccc

		bin/biting-pear-c++.ccc :
		- changed `-Xbiting-pear prefix=...' and `-Xbiting-pear
		  target-prefix=...' to `-Xbiting-pear -prefix=...' and
		  `-Xbiting-pear -target-prefix=...'
		- added `-Xbiting-pear -doge', still unimplemented
		- refactored per lolcat.h

		bin/biting-pear-doge.ccc ,
		share/biting-pear/calm.ccc ,
		share/biting-pear/nomnom.cc :
		- refactored per lolcat.h

		share/biting-pear/epic.ccc :
		- renamed from epic.cc to epic.ccc
		- refactored per lolcat.h

		GNUmakefile :
		- changed `-Xbiting-pear prefix=...' and `-Xbiting-pear
		  target-prefix=...' to `-Xbiting-pear -prefix=...' and
		  `-Xbiting-pear -target-prefix=...'
		- modified biting-pear-doge invocation not to use temporary
		  file name
		- fixed dependencies

2016-02-29	Ad astra per alas porci.  (5)

		configure ,
		lolwutconf/c++.target.inc :
		- now checks if target platform uses a __libc_csu_init(...)
		  that is overridable

		lolwutconf/configure.inc :
		- slightly reformatted comments

2016-02-28	Yo doge, we herd you like doge...

		bin/biting-pear-doge.ccc :
		- fixed bug causing BFD internal errors
		- now atomically creates output file

2016-02-27	"Praise doge."

		test/test-orly-wut.ccc ,
		test/test-orly-wut.ld ,
		test/test-orly-wut.good :
		- initial version

		include/biting-pear/host/srsly.h ,
		include/biting-pear/orly.h :
		- fixed rather dumb bug in wut(...) state initialization

		include/biting-pear/kthxbai.h :
		- fixed namespacing glitch for forward declaration of
		  biting_pear::omg

		include/biting-pear/lolwut.h :
		- fixed lolwut(, 3) case for ARM

		GNUmakefile :
		- added test-orly-wut test case
		- fixed compilation of test cases

		.gitignore :
		- added test-orly-wut

2016-02-26	Confusion and enhancements.  (3)

		include/biting-pear/lolwut.h :
		- x86-64:
		  - simplified code for deriving `leaq' displacement
		  - lowered threshold for splitting displacement into two
		  - improved comments

2016-02-25	Confusion and enhancements.  (2)

		include/biting-pear/kthxbai.h :
		- now obscures addresses of constants emitted in read-only
		  and read/write data sections

		include/biting-pear/lolwut.h :
		- improved comments
		- x86-64 `leaq' inline assembly statements are no longer
		  marked as modifying the condition flags, while x86-32
		  `addl' statements are thus marked
		- added handling of addresses of static constants

		GNUmakefile :
		- added `share/biting-pear/%.s: share/biting-pear/%.ii' rule
		  for debugging

2016-02-24	Confusion and enhancements.

		bin/biting-pear-doge.ccc :
		- now allows relocations in object file being frobbed ---
		  only the frobbed section needs to be relocation-free

		include/biting-pear/kthxbai.h :
		- now deliberately emits constants in static read-only and
		  read/write data sections

		include/biting-pear/orly.h :
		- added orly<...>::wut(...)

		GNUmakefile :
		- fixed `%.s: %.ccc' rule

2016-02-21	Renamed test cases.

		test/test-kthxbai.ccc ,
		test/test-kthxbai.good :
		- renamed test-1 to test-kthxbai

		test/test-kthxbai-p.ccc ,
		test/test-kthxbai-p.good :
		- renamed test-2 to test-kthxbai-p

		test/test-orly.ccc ,
		test/test-orly.good :
		- renamed test-3 to test-orly

		test/test-dawg.ccc ,
		test/test-dawg.good :
		- renamed test-extra-1 to test-dawg

		test/test-yodawg.ccc ,
		test/test-yodawg.good :
		- renamed test-extra-2 to test-yodawg

		test/test-dawg-syn.ccc ,
		test/test-dawg-syn.good :
		- renamed test-extra-3 to test-dawg-syn

		test/test-yodawg-syn.ccc ,
		test/test-yodawg-syn.good :
		- renamed test-extra-4 to test-yodawg-syn

		GNUmakefile ,
		.gitignore :
		- updated

2016-02-20	Some x86 and x86-64 enhancements, and a bit more.

		GNUmakefile :
		- updated %.s rule

		include/biting-pear/omg.h :
		- now adds a random prefix before `retl'/`retq'/`lretl'/
		  `lretq' on x86 and x86-64
		- now also adds junk bytes for x86-64

		test/test-extra-3.ccc :
		- really stress-test...

		test/test-extra-3.good :
		- updated

		bin/biting-pear-c++.ccc :
		- now sets $BITING_PEAR_DRIVER_CXX, for later use

2016-02-14	Position-independent executable support.

		configure :
		- now includes `-pie' in $CXXFLAGS and $CXXFLAGS_FOR_TARGET
		  on default

		include/biting-pear/lolwut.h :
		- fixed handling of function pointers for x86-64 so that it
		  works work `-pie'
		- fixed precedence bug in lolwut<...>::operator T *()

		include/biting-pear/omg.h :
		- fixed a minor assembly bug in omg_impl_0<..., 0u>

2016-02-11	Ad astra per alas porci.  (4)

		include/biting-pear/omg.h :
		- now uses only `bx' and `blx' in ARM code when compiling
		  for the appropriate platforms

2016-02-10	Ad astra per alas porci.  (3)

		include/biting-pear/kthxbai.h :
		- added arplw instruction for x86-32

		include/biting-pear/omg.h :
		- fixed mov %cs, ... assembly glitch for x86-32

		GNUmakefile :
		- fixed glitch in compiling bin/biting-pear-doge.ccc

2016-02-09	Ad astra per alas porci.  (2)

		bin/biting-pear-doge.ccc ,
		GNUmakefile ,
		.gitignore :
		- share/biting-pear/doge.ccc -> bin/biting-pear-doge.ccc

2016-02-08	Ad astra per alas porci.

		share/biting-pear/doge.ccc :
		- now requires a `seed' argument

2016-02-04	License change.  Indirect jumps, continued.

		include/biting-pear/omg.h :
		- try to move %cs read further away from its use

		test/test-extra-3.ccc :
		- now creates several "Hello, world!" strings to stress-test
		  the scrambling

		test/test-extra-3.good :
		- updated

		LICENSE :
		- changed to the GNU GPL v3, for releases from here on

2016-02-03	Yet another type of indirect jump.

		include/biting-pear/omg.h :
		- added far returns

2016-01-31	A bit more refactoring.

		share/biting-pear/calm.ccc :
		- restructured code for invoking cc1plus and echoing command
		  line arguments

2016-01-27	Slightly better documentation.

		README.md :
		- added some installation instructions

2016-01-24	A bit of refactoring.

		GNUmakefile ,
		bin/biting-pear-c++.ccc ,
		share/biting-pear/calm.ccc :
		- factored out shocked(.) and curious(...) to share/biting-
		  pear/epic.cc

		share/biting-pear/epic.cc :
		- initial version; split from share/biting-pear/calm.ccc

2016-01-23	Nice wrapper.

		.gitignore :
		- added *.ii and calm, removed nomnom

		GNUmakefile :
		- updated to build and use wrapper
		- now preprocesses to .ii files instead of .i files
		- now builds internal passes from share/biting-pear/ rather
		  than libexec/biting-pear/
		- $(config.h.host) and $(config.h.target) now depend on
		  config.cache
		- now defines biting_pear::impl::getenv(.) in $(config.h.host)
		- fixed installation of host files

		bin/biting-pear-c++.ccc ,
		share/biting-pear/calm.ccc ,
		share/biting-pear/calm.spec :
		- initial version

		configure :
		- now probes for secure_getenv(.)

		share/biting-pear/doge.ccc :
		- moved from libexec/biting-pear/doge.ccc

		share/biting-pear/nomnom.cc :
		- moved from libexec/biting-pear/nomnom.cc
		- is now a module (used by calm.ccc) rather than a
		  stand-alone program

		share/biting-pear/omnomnom.lxx :
		- moved from libexec/biting-pear/omnomnom.lxx
		- now uses a default seed if no seed is specified, rather
		  than a (half-baked) random seed

		include/biting-pear/omg.h ,
		lolwutconf/configure.inc :
		- minor fixes

2016-01-09	Touch-ups.

		GNUmakefile :
		- now uses $conf_Host_exec when running $CXX_FOR_TARGET
		- changed handling of target-side wchar_t
		- `make clean' no longer zaps config.cache
		- fixed bug in #define of biting_pear_decltype

		configure :
		- now looks for mbrtoc16(...) and mbrtoc32(...) in
		  <cuchar> and <uchar.h>

		libexec/biting-pear/omnomnom.lxx :
		- changed handing of target-side wchar_t

		lolwutconf/configure.inc :
		- now looks for `seq' program
		- now tries to derive target installation directory
		  (--target-prefix=) more intelligently, with a
		  conf__find_good_runtime_prefix() function
		- now makes sure that host prefix (--prefix=) is absolute
		- other minor fixes

		lolwutconf/c++.common.inc :
		- now uses conf__find_good_runtime_prefix() when determining
		  host/target program executor command line

		lolwutconf/c++.inc :
		- added conf_cxx_probe_func()

		lolwutconf/c++.target.inc :
		- now uses $conf_Host_exec when running $CXX_FOR_TARGET
		- fixed bug in conf_cxxt_probe_wchar_typ()

2016-01-03	Canadian cross.

		.gitignore :
		- updated

		GNUmakefile :
		- updated for "Canadian cross" setup
		- updated names of helper programs
		- now uses $(conf_Srcdir) etc. instead of $(srcdir) etc.

		configure :
		- updated for "Canadian cross" setup
		- now probes precise type of wchar_t for host and target

		lolwutconf/c++.common.inc :
		- initial version; some routines split from lolwutconf/
		  c++.inc

		lolwutconf/c++.inc :
		- updated for "Canadian cross" setup
		- moved some logic out to lolwutconf/c++.common.inc
		- conf_cxx_probe_endianness() now properly cleans up
		  temporary file
		- added conf_cxx_probe_wchar_typ()

		lolwutconf/c++.target.inc :
		- initial version; much code duplicated from lolwutconf/
		  c++.inc

		lolwutconf/configure.inc :
		- updated for "Canadian cross" setup
		- now uses $(conf_Srcdir) etc. instead of $(srcdir) etc.
		- fixed silly bug in initial `unset'
		- conf__mktemp() no longer uses `local -' --- bash
		  does not understand it

		lolwutconf/lolwutconf.mk :
		- updated for "Canadian cross" setup
		- now uses $(conf_Srcdir) etc. instead of $(srcdir) etc.

		libexec/biting-pear/nomnom.cc :
		- moved from helper/crc64.cc

		libexec/biting-pear/omnomnom.lxx :
		- moved from helper/postpreproc.lxx
		- now checks host and target wchar_t compatibility for
		  []L"..." and $L"..."

		libexec/biting-pear/doge.ccc :
		- moved from util/biting-pear-doge.ccc
		- now includes <biting-pear/host/srsly.h> instead of
		  <biting-pear/srsly.h>

		include/biting-pear/bbq.h :
		- now includes different configuration header files on
		  host and target

		include/biting-pear/host/rly.h :
		- moved from include/biting-pear/rly.h

		include/biting-pear/host/srsly.h :
		- moved from include/biting-pear/srsly.h
		- now includes <biting-pear/host/rly.h> instead of
		  <biting-pear/rly.h>

		include/biting-pear/lolwut.h ,
		include/biting-pear/omg.h :
		- now only uses certain __asm constructs when compiling
		  with optimization

2015-12-29	For great random.  (2)

		include/biting-pear/srsly.h :
		- simplified

2015-12-28	For great random.

		include/biting-pear/rly.h ,
		include/biting-pear/srsly.h :
		- initial version

		include/biting-pear/yarly.h :
		- fixed really, really silly operator precedence bug
		- fixed really, really silly modulo bug

		util/biting-pear-doge.ccc :
		- now uses srsly.h

		GNUmakefile :
		- added rly.h and srsly.h as header dependencies

2015-12-26	And now for something remotely different.

		util/biting-pear-doge.ccc :
		- initial draft

		GNUmakefile :
		- now builds util/biting-pear-doge

		configure :
		- now probes for GNU BFD library

		include/biting-pear/dawg.h :
		- biting_pear::dawg_impl<...> now has default and copy
		  constructors
		- reduced template recursion levels, to make compilation
		  tractable

		lolwutconf/c++.inc :
		- added conf_cxx_probe_lib()

		.gitignore :
		- updated

2015-12-13	Syntactic sugar for strings.

		helper/postpreproc.lxx :
		- renamed from helper/postpreproc-2.lxx
		- added $"..." and $L"..."

		GNUmakefile :
		- added test cases for $"..." and $L"..."
		- now automatically invokes ./configure if config.cache
		  is absent
		- now builds helper/postpreproc and not helper/postpreproc-2

		test/test-extra-3.ccc ,
		test/test-extra-3.good ,
		test/test-extra-4.ccc ,
		test/test-extra-4.good :
		- initial version

		.gitignore :
		- updated

2015-11-24	getpid() and getppid().

		include/biting-pear/omg.h :
		- now makes bogus calls to getpid() and getppid() if signal-
		  -safe calls are allowed

		test/test-1.ccc ,
		test/test-2.ccc :
		- added allow_all tests

2015-09-27	Minor improvement.

		GNUmakefile :
		- now makes $(config.h) define `biting_pear_decltype'

		configure ,
		lolwutconf/c++.inc :
		- now checks for `decltype' support

		include/biting-pear/dawg.h ,
		include/biting-pear/omg.h ,
		test/test-2.ccc :
		- switched from using `__typeof' to using
		  `biting_pear_decltype'

		helper/postpreproc-2.lxx :
		- now rejects non-shortest UTF-8 character encodings
		- now checks for and rejects encodings of UTF-16
		  surrogate code points (\ud800--\udfff)

2015-09-24	Strings and more strings.

		GNUmakefile :
		- now outputs biting_pear_HAVE_CXX_VAR_TPLS macro
		- now runs test programs under en_US.UTF-8 locale
		- added <biting-pear/dawg.h>, <biting-pear/yodawg.h>,
		  test/test-extra-1, test/test-extra-2

		configure :
		- added specific test for C++11 variadic templates

		lolwutconf/c++.inc :
		- added specific test for C++11 variadic templates
		- fixed minor bug in conf_cxx_probe_endianness()
		- fixed minor bug in conf_cxx_chk_compiler_and_executor()

		include/biting-pear/dawg.h ,
		include/biting-pear/yodawg.h ,
		test/test-extra-1.ccc ,
		test/test-extra-1.good ,
		test/test-extra-2.ccc ,
		test/test-extra-2.good :
		- initial version

		include/biting-pear/kthxbai.h :
		- reduced template recursion levels to 3
		- now uses biting_pear_HAVE_CXX_VAR_TPLS

		include/biting-pear/lolwut.h ,
		include/biting-pear/omg.h :
		- reduced template recursion levels to 3

		.gitignore :
		- added test-extra-1 and test-extra-2

2015-09-20	Strings and lines.

		helper/postpreproc-2.lxx :
		- fixed corner cases in handling of strings
		- now parses #line directives and outputs error messages
		  according to them
		- added string splitting construct

2015-09-19	Now cross-compiles everything or nothing.

		GNUmakefile :
		- helper/postproc* -> helper/postpreproc-2*
		- now cross-compiles everything
		- now uses $(conf_Host_exec) to run helper/crc64.cc and
		  helper/postpreproc-2.cc

		helper/postpreproc-2.lxx :
		- renamed from helper/postproc.lxx

		configure :
		- removed checks for build-side stuff

		lolwutconf/c++.inc :
		- removed checks for build-side stuff

		lolwutconf/configure.inc :
		- added --host-exec

		include/biting-pear/lolwut.h :
		- fixed syntax bug in lolwut_impl<>

		.gitignore :
		- postproc* -> postpreproc-2*

2015-08-07	Delirant isti Romani.

		include/biting-pear/kthxbai.h :
		- biting_pear::kthxbai<> now allows operations other than
		  +/- for the outermost step

		configure :
		- removed check for build-side endianness

2015-07-21	Added flags to specify which (erm) operations to allow.
		And, now checks for runaway template recursion.

		include/biting-pear/nowai.h :
		- new

		include/biting-pear/bbq.h :
		- added biting_pear::impl::ops_flags_t and flags constants

		include/biting-pear/kthxbai.h ,
		include/biting-pear/lolwut.h ,
		include/biting-pear/orly.h :
		- added `Flags' template argument before `Levels'
		- now uses nowai.h

		include/biting-pear/omg.h :
		- added `Flags' template argument before `Levels'
		- now uses nowai.h
		- now checks for and uses allow_signal_safes in flags
		- tweaked distribution of types of operations

		include/biting-pear/yarly.h :
		- added `Flags' template argument before `Levels'
		- now uses nowai.h
		- reduced levels for kthxbai_impl from 4 to 3

		test/test-1.ccc :
		- h0, h1, and h2 are now initialized with <...allow_all>

		README.md :
		- updated synopsis to have `flags' template argument before
		  `levels'

		GNUmakefile :
		- added include/biting-pear/nowai.h as a file to depend on
		  and install

		configure ,
		lolwutconf/c++.inc :
		- added host-side and build-side endianness detection (for
		  use later)

		lolwutconf/configure.inc :
		- now tests for `grep' and `strings' utilities

2015-07-17	o rly?  ya rly!

		include/biting-pear/orly.h ,
		include/biting-pear/yarly.h ,
		test/test-3.ccc ,
		test/test-3.good :
		- new

		GNUmakefile :
		- added include/biting-pear/orly.h and include/biting-pear/
		  yarly.h as dependencies in compilation
		- added test-3

		.gitignore :
		- added test-3

2015-07-11	Multiplication.

		include/biting-pear/bbq.h ,
		include/biting-pear/kthxbai.h :
		- added multiplication and inverse multiplication

2015-07-10	C++ compiler all the way.

		GNUmakefile :
		- now compiles helper/crc64 from helper/crc64.cc

		helper/crc64.cc :
		- renamed from helper/crc64.c; C++-ized
		- changed read(...) call to fread(...)

		helper/postproc.lxx :
		- removed parser backtracking
		- newline can now follow backslash in "..." and '...'

		include/biting-pear/lolwut.h :
		- multiple layers of pointer arithmetic

2015-07-08	ARM Thumb-32 support.  Reduced number of recursion levels
		from 6 to 5, so that compiler does not exhaust memory.

		include/biting-pear/kthxbai.h :
		- reduced recursion levels

		include/biting-pear/lolwut.h :
		- reduced recursion levels
		- added ARM Thumb-32 handling for lolwut(, 1) and (, 2)

		include/biting-pear/omg.h :
		- reduced recursion levels
		- ARM architecture: added ARM mode and Thumb mode handling

		lolwutconf/c++.inc :
		- now handles stuff like --host=armv7-a-linux-gnueabi
		- now tries to turn on Thumb mode when compiling for ARM

		lolwutconf/configure.inc :
		- more useful --help

		test/test-2.ccc :
		- added a few more printf(...) calls

2015-07-05	Somewhat better support for cross compilation in general.

		configure :
		- now checks for C++11 on build side

		lolwutconf/configure.inc :
		- added --host
		- added build environment sanity checks
		- now prefixes status messages with `* '
		- now uses POSIX character classes for `sed'

		lolwutconf/c++.inc :
		- now handles --host input, with special case for x86-32
		  compilation on x86-64
		- now checks for C++11 on build side

		include/biting-pear/omg.h :
		- fixed a minor bug

2015-07-04	Better x86-32 support.

		include/biting-pear/lolwut.h :
		- added handling of code pointers for x86-32

		include/biting-pear/omg.h :
		- added x86-32 control flows and junk syscalls

2015-07-03	Function pointers!

		include/biting-pear/lolwut.h :
		- added lolwut(, 2), for function pointers
		- lolwut(, 1):
		  - changed threshold for leaq -> leaq + addq/subq split
		    from 0x7fff0000 to 0x70000000
		  - for splits, took addq/subq out of __asm(...) so that g++
		    can move them around
		  - changed %c assembly operand modifier to %a

		include/biting-pear/kthxbai.h :
		- on C++11 compiler, now specially checks for function
		  pointer type and behaves differently in that case
		- code formatting tweaks

		README.md :
		- changed recommended way of assigning values from `var =
		  val' to `var(val)'
		- added mention of function pointers

		test/test-2.ccc ,
		test/test-2.good :
		- initial version

		GNUmakefile :
		- added test-2
		- marked test files as .PRECIOUS

		.gitignore :
		- added test-2

2015-06-30	`make check' now works.

		GNUmakefile :
		- added rule for `make check'
		- added %.o to .PRECIOUS

		configure ,
		lolwutconf/c++.inc :
		- moved most default CXXFLAGS flags into `configure'

		lolwutconf/configure.inc :
		- fixed bug in conf__barf()

		lolwutconf/lolwutconf.mk :
		- added `check' to .PHONY

		README.md :
		- `uint_least64_t' -> `std::uint_least64_t'

		test/test-1.good :
		- added

		.gitignore :
		- added derp.h

2015-06-27	Pre-C++11 compiler support.  And, added +=, -=, ++, and --
		for pointers.

		include/biting-pear/bbq.h :
		- now uses generated include/biting-pear/derp.h

		include/biting-pear/kthxbai.h ,
		include/biting-pear/lolwut.h ,
		- added +=, -=, ++, and -- for pointers

		lolwutconf/c++.inc ,
		lolwutconf/configure.inc ,
		lolwutconf/lolwutconf.mk :
		- initial version

		GNUmakefile :
		- moved some logic into lolwutconf/lolwutconf.mk
		- now checks for both <cinttypes> and <inttypes.h>
		- now creates include/biting-pear/derp.h

		configure :
		- moved most logic into lolwutconf/*
		- now checks for both <cinttypes> and <inttypes.h>

2015-06-22	Further internal cleanup.

		include/biting-pear/bbq.h ,
		include/biting-pear/kthxbai.h ,
		include/biting-pear/lolwut.h , 
		include/biting-pear/omg.h :
		- internally set biting_pear_t::impl::rand_state_t =
		  std::uint_least64_t
		- internally renamed `Seed' variables to `State'

2015-06-21	Autoconfiscated... well, not really.

		configure :
		- initial version; does --srcdir and --prefix

		GNUmakefile :
		- now tries to read from config.cache if present
		- added `distclean', `install', and `uninstall' rules
		- added $(..._FOR_BUILD) variables, for rudimentary support
		  for cross-compilation
		- now uses $(LDLIBS) (and $(LDLIBS_FOR_BUILD)) when linking
		- added support for building outside of source tree, e.g.
		  use of $(VPATH)
		- updated name: helper/postproc.ll -> helper/postproc.lxx

		helper/postproc.lxx :
		- renamed from helper/postproc.ll, to avoid confusion with
		  LLVM files

		include/biting-pear/kthxbai.h ,
		include/biting-pear/lolwut.h ,
		include/biting-pear/omg.h ,
		test/test-1.ccc :
		- now use #include <...>, not #include "..."

		.gitignore :
		- added config.cache

2015-06-16	Added some semblance of documentation.

		README.md :
		- added documentation

		helper/postproc.ll :
		- fixed bugs in input parsing and output

2015-06-15	Reorganized directories.  And, junk bytes.

		include/biting-pear/omg.h :
		- moved from biting-pear/ to include/biting-pear/
		- added junk bytes
		- added more types of indirect jumps

		include/biting-pear/lolwut.h ,
		include/biting-pear/kthxbai.h :
		- moved from biting-pear/ to include/biting-pear/
		- kthxbai<> with pointer type now hands over to lolwut<>

		include/biting-pear/bbq.h :
		- moved from biting-pear/ to include/biting-pear/

		test/test-1.ccc :
		- moved from top directory

		.gitignore :
		- initial version

2015-06-14	14 Jun 2015 version.
